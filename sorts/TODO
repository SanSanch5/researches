0. В быстрой сортировке сделать разбиение с использованием memmove
1. Написать прогу, котора пробежится по полученным данным и найдёт для каждой сортировки целое число n - количество элементов массива,
при котором сортировка вставками работает быстрее заданной. 
Найдено:
Max N insertion better than merge = 840
Max N insertion better than heap = -1
Max N insertion better than random quick = 2180
Max N insertion better than median quick = 2180
Max N insertion better than smart quick = 1350

2. Подставить эти данные в алгоритмы
3. Построить графики работ усовершенствованных алгоритмов. По возможности, сравнить с тем, что было раньше.
Подумав, я понял, что с этими данными алгоритмы должны работать точно также, как и без вставок на низших уровнях
Теперь следующая задача:

4. Найти минимальное произведение отношения найденного N и более меньшего со временем работы на этом меньшем уровне.
Это и даст минимальный уровень, на котором надо разбивать.
	4.1. Построить график зависимости сортировки (пофиг какой, для всех найдены границы) от изменения N
